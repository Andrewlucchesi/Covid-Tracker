{"ast":null,"code":"var _jsxFileName = \"/Users/sandyli/Desktop/CS97/project/Covid-tracker/covid-tracker/src/Maps/Map.js\";\n// import React, {Component, useState} from 'react';\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker, InfoWindow } from \"react-google-maps\";\nconst MapContainer = withScriptjs(withGoogleMap(props => {\n  const recycleCenters = props.recycleCenters;\n  const [selectedCenter, setSelectedCenter] = useState(null);\n  useEffect(() => {\n    const listener = e => {\n      if (e.key === \"Escape\") {\n        setSelectedCenter(null);\n      }\n    };\n\n    window.addEventListener(\"keydown\", listener);\n    return () => {\n      window.removeEventListener(\"keydown\", listener);\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(GoogleMap, {\n    zoom: 4.5,\n    center: {\n      lat: 39.6693,\n      lng: -98.3476\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, recycleCenters.map(center => /*#__PURE__*/React.createElement(Marker, {\n    key: center.id,\n    position: {\n      lat: center.latitude,\n      lng: center.longitude\n    },\n    onClick: () => {\n      setSelectedCenter(center);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  })), \";\", selectedCenter && /*#__PURE__*/React.createElement(InfoWindow, {\n    onCloseClick: () => {\n      setSelectedCenter(null);\n    },\n    position: {\n      lat: selectedCenter.latitude,\n      lng: selectedCenter.longitude\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, selectedCenter.name), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, selectedCenter.address, \", \", selectedCenter.city, \",\", selectedCenter.state, \" \", selectedCenter.zip_code), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, selectedCenter.phone_number), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, \"Hours of operation: \", selectedCenter.hours))));\n}));\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyCW_Vioa3QR3TUnN6MuFdprCqabI055FZk'\n})(MapContainer); // export default MapContainer;\n// import React, {Component, useState} from 'react';\n// import { Map, GoogleApiWrapper, Marker, withScriptjs, InfoWindow } from 'google-maps-react';\n// import countryLoc from './Country'\n// // import {fetchCountryData} from './api'\n// const mapStyles = {\n//   width: '80%',\n//   height: '70%',\n// };\n// export class MapContainer extends Component {\n// constructor(props) {\n//   super(props);\n//   this.state = { countryLoc }\n// }\n// displayMarkers = () => {\n//   return this.state.countryLoc.map((location, index) => {\n//     return <Marker \n//       key={index} \n//       id={index} \n//       position={{\n//         lat: location.latitude,\n//         lng: location.longitude\n//    }}\n//    onClick={() => console.log(\"You clicked me!\")} \n//   /> \n//   })\n// }\n// render() {\n//   return (\n//       <Map\n//         google={this.props.google}\n//         zoom={1}\n//         style={mapStyles}\n//         initialCenter={{ lat: 39.8283, lng: -98.5795}}\n//       >\n//         {this.displayMarkers()}\n//         {/* <Marker\n//           lat={39.8283}\n//           lng={-98.5795}\n//           name=\"My Marker\"\n//           color=\"red\"\n//         /> */}\n//       </Map>\n//   );\n// }\n// }\n// export default GoogleApiWrapper({\n//   apiKey: 'AIzaSyCW_Vioa3QR3TUnN6MuFdprCqabI055FZk'\n// })(MapContainer);","map":{"version":3,"sources":["/Users/sandyli/Desktop/CS97/project/Covid-tracker/covid-tracker/src/Maps/Map.js"],"names":["withScriptjs","withGoogleMap","GoogleMap","Marker","InfoWindow","MapContainer","props","recycleCenters","selectedCenter","setSelectedCenter","useState","useEffect","listener","e","key","window","addEventListener","removeEventListener","lat","lng","map","center","id","latitude","longitude","name","address","city","state","zip_code","phone_number","hours","GoogleApiWrapper","apiKey"],"mappings":"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","sourcesContent":["// import React, {Component, useState} from 'react';\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker, InfoWindow } from \"react-google-maps\";\n\nconst MapContainer = withScriptjs(withGoogleMap((props) =>{\n  const recycleCenters = props.recycleCenters \n  const [selectedCenter, setSelectedCenter] = useState(null);\n  \n  useEffect(() => {\n    const listener = e => {\n       if (e.key === \"Escape\") {\n          setSelectedCenter(null);\n       }\n    };\n    window.addEventListener(\"keydown\", listener);\n    return () => {\n       window.removeEventListener(\"keydown\", listener);\n    };\n }, \n []);\n\n  return (       \n    <GoogleMap zoom={4.5} center={ { lat:  39.6693, lng: -98.3476 } } >  \n      {recycleCenters.map(center => (            \n        <Marker\n          key={center.id}\n          position={{\n            lat: center.latitude,\n            lng: center.longitude\n          }}\n          onClick={() => {setSelectedCenter(center);}}\n        />    \n      ))};\n      {selectedCenter && (\n        <InfoWindow\n          onCloseClick={() => {setSelectedCenter(null);}}\n          position={{\n              lat: selectedCenter.latitude,\n              lng: selectedCenter.longitude\n          }}\n        >\n          <div>\n            <h3>{selectedCenter.name}</h3>\n            <h5>{selectedCenter.address}, {selectedCenter.city},{selectedCenter.state} {selectedCenter.zip_code}</h5>\n            <h5>{selectedCenter.phone_number}</h5>\n            <p>Hours of operation: {selectedCenter.hours}</p>\n          </div>\n        </InfoWindow>\n      )}\n    </GoogleMap>\n  );\n}))\n\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyCW_Vioa3QR3TUnN6MuFdprCqabI055FZk'\n})(MapContainer);\n// export default MapContainer;\n\n// import React, {Component, useState} from 'react';\n// import { Map, GoogleApiWrapper, Marker, withScriptjs, InfoWindow } from 'google-maps-react';\n// import countryLoc from './Country'\n// // import {fetchCountryData} from './api'\n\n// const mapStyles = {\n//   width: '80%',\n//   height: '70%',\n// };\n\n// export class MapContainer extends Component {\n  // constructor(props) {\n  //   super(props);\n  //   this.state = { countryLoc }\n  // }\n\n  // displayMarkers = () => {\n  //   return this.state.countryLoc.map((location, index) => {\n  //     return <Marker \n  //       key={index} \n  //       id={index} \n  //       position={{\n  //         lat: location.latitude,\n  //         lng: location.longitude\n  //    }}\n  //    onClick={() => console.log(\"You clicked me!\")} \n  //   /> \n  //   })\n  // }\n\n  // render() {\n  //   return (\n  //       <Map\n  //         google={this.props.google}\n  //         zoom={1}\n  //         style={mapStyles}\n  //         initialCenter={{ lat: 39.8283, lng: -98.5795}}\n  //       >\n  //         {this.displayMarkers()}\n  //         {/* <Marker\n  //           lat={39.8283}\n  //           lng={-98.5795}\n  //           name=\"My Marker\"\n  //           color=\"red\"\n  //         /> */}\n  //       </Map>\n  //   );\n  // }\n// }\n\n// export default GoogleApiWrapper({\n//   apiKey: 'AIzaSyCW_Vioa3QR3TUnN6MuFdprCqabI055FZk'\n// })(MapContainer);"]},"metadata":{},"sourceType":"module"}