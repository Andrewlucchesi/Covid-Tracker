{"ast":null,"code":"var _jsxFileName = \"/Users/sandyli/Desktop/CS97/project/proj/Covid-Tracker/covid-tracker/src/Maps/Map.js\";\nimport React, { Component, useState } from 'react';\nimport { Map, GoogleApiWrapper, Marker, InfoWindow } from 'google-maps-react';\nimport countryLoc from './Country'; // import {fetchCountryData} from '../api'\n\nconst mapStyles = {\n  width: '80%',\n  height: '70%'\n};\nexport class MapContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onClose = props => {\n      if (this.state.showingInfoWindow) {\n        this.setState({\n          showingInfoWindow: false,\n          activeMarker: null\n        });\n      }\n    };\n\n    this.displayMarkers = () => {\n      return this.state.countryLoc.map((location, index) => {\n        return [/*#__PURE__*/React.createElement(Marker, {\n          key: index,\n          id: index,\n          position: {\n            lat: location.latitude,\n            lng: location.longitude\n          },\n          onClick: this.onMarkerClick,\n          country: location.countryCode // onClick={() => console.log(\"Hello\")}\n          ,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 9\n          }\n        }), /*#__PURE__*/React.createElement(InfoWindow, {\n          onCloseClick: this.onClose,\n          marker: this.state.activeMarker,\n          visible: this.state.showingInfoWindow,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"h4\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }\n        }, this.state.selectedPlace)))];\n      });\n    };\n\n    this.onMarkerClick = this.onMarkerClick.bind(this);\n    this.onClose = this.onClose.bind(this);\n    this.state = {\n      countryLoc,\n      isOpen: false,\n      showingInfoWindow: false,\n      activeMarker: {},\n      selectedPlace: {},\n      Disabled: true,\n      countryData: props.CountryData\n    };\n    console.log(this.state.countryData);\n  }\n\n  componentDidMount() {\n    this.setState({\n      Disabled: false\n    });\n  }\n\n  getInitialState() {\n    return {\n      showingInfoWindow: false,\n      activeMarker: {},\n      selectedPlace: \"\"\n    };\n  }\n\n  onMarkerClick(props, marker, e) {\n    for (const country of this.state.countryData) {\n      if (country.CountryCode == props.country) {\n        console.log(country.Country);\n        let text = \"Total Cases: \" + country.TotalConfirmed + \"\\n Total Deaths: \" + country.TotalDeaths;\n        this.setState({\n          selectedPlace: text,\n          activeMarker: marker,\n          showingInfoWindow: true\n        });\n        return;\n      }\n    }\n  }\n\n  render() {\n    if (this.state.Disabled) {\n      return null;\n    }\n\n    return /*#__PURE__*/React.createElement(Map, {\n      google: this.props.google,\n      zoom: 1,\n      style: mapStyles,\n      initialCenter: {\n        lat: 39.8283,\n        lng: -98.5795\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }\n    }, this.displayMarkers());\n  }\n\n}\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyCW_Vioa3QR3TUnN6MuFdprCqabI055FZk'\n})(MapContainer);","map":{"version":3,"sources":["/Users/sandyli/Desktop/CS97/project/proj/Covid-Tracker/covid-tracker/src/Maps/Map.js"],"names":["React","Component","useState","Map","GoogleApiWrapper","Marker","InfoWindow","countryLoc","mapStyles","width","height","MapContainer","constructor","props","onClose","state","showingInfoWindow","setState","activeMarker","displayMarkers","map","location","index","lat","latitude","lng","longitude","onMarkerClick","countryCode","selectedPlace","bind","isOpen","Disabled","countryData","CountryData","console","log","componentDidMount","getInitialState","marker","e","country","CountryCode","Country","text","TotalConfirmed","TotalDeaths","render","google","apiKey"],"mappings":"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","sourcesContent":["import React, {Component, useState} from 'react';\nimport { Map, GoogleApiWrapper, Marker, InfoWindow } from 'google-maps-react';\nimport countryLoc from './Country'\n// import {fetchCountryData} from '../api'\n\nconst mapStyles = {\n  width: '80%',\n  height: '70%',\n};\n\n\n\n\nexport class MapContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.onMarkerClick = this.onMarkerClick.bind(this);\n    this.onClose = this.onClose.bind(this);\n    this.state = { countryLoc, \n                  isOpen: false,\n                  showingInfoWindow: false,\n                  activeMarker: {},\n                  selectedPlace: {},\n                  Disabled: true,\n                  countryData: props.CountryData,\n                };\n    console.log(this.state.countryData);\n  }\n\n  componentDidMount() {\n    this.setState({\n      Disabled: false\n    })\n  }\n  getInitialState() {\n    return {\n      showingInfoWindow: false,\n      activeMarker: {},\n      selectedPlace: \"\",\n    }\n  }\n\n  onMarkerClick(props, marker, e) {\n    \n    for(const country of this.state.countryData)\n    {\n      if(country.CountryCode == props.country)\n      {\n        console.log(country.Country);\n        let text =  \"Total Cases: \" + country.TotalConfirmed + \"\\n Total Deaths: \" + country.TotalDeaths;\n\n        this.setState({\n          \n          selectedPlace: text,\n          activeMarker: marker,\n          showingInfoWindow: true\n        });\n        return;\n      }\n    }\n    \n  }\n\n  onClose = props => {\n    if(this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null\n      });\n    }\n  }\n\n  displayMarkers = () => {\n    return this.state.countryLoc.map((location, index) => {\n      return [\n        <Marker \n          key={index} \n          id={index} \n          position={{\n            lat: location.latitude,\n            lng: location.longitude\n          }}\n          onClick={this.onMarkerClick}\n          \n          country={location.countryCode}\n          \n        // onClick={() => console.log(\"Hello\")}\n        >\n          \n         </Marker>,\n        <InfoWindow\n          onCloseClick={this.onClose}\n          marker={this.state.activeMarker}\n          visible={this.state.showingInfoWindow}\n          \n          >\n            <div>\n              <h4>{this.state.selectedPlace}</h4>\n            </div>\n          \n          </InfoWindow>  \n      ]\n      \n      \n\n    })\n  }\n\n  \n\n  render() {\n    if((this.state.Disabled))\n      {\n        return null;\n      }\n    return (\n        <Map\n          google={this.props.google}\n          zoom={1}\n          style={mapStyles}\n          initialCenter={{ lat: 39.8283, lng: -98.5795}}\n        >\n          {this.displayMarkers()}\n        </Map> \n    );\n  }\n}\n\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyCW_Vioa3QR3TUnN6MuFdprCqabI055FZk'\n})(MapContainer);"]},"metadata":{},"sourceType":"module"}