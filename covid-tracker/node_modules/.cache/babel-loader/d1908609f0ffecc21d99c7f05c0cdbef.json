{"ast":null,"code":"var _jsxFileName = \"/Users/sandyli/Desktop/CS97/project/Covid-tracker/covid-tracker/src/Maps/Map.js\";\nimport React, { Component, useState } from 'react';\nimport { Map, GoogleApiWrapper, Marker, InfoWindow } from 'google-maps-react';\nimport countryLoc from './Country'; // import {fetchCountryData} from './api'\n\nconst mapStyles = {\n  width: '80%',\n  height: '70%'\n};\nexport class MapContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleToggleOpen = () => {\n      this.setState({\n        isOpen: true\n      });\n    };\n\n    this.handleToggleClose = () => {\n      this.setState({\n        isOpen: false\n      });\n    };\n\n    this.displayMarkers = () => {\n      return this.state.countryLoc.map((location, index) => {\n        return /*#__PURE__*/React.createElement(Marker, {\n          key: index,\n          id: index,\n          position: {\n            lat: location.latitude,\n            lng: location.longitude\n          } //  onClick={() => console.log(\"You clicked me!\")} \n          ,\n          onClick: () => this.handleToggleOpen(index),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 14\n          }\n        });\n      });\n    };\n\n    this.state = {\n      countryLoc,\n      isOpen: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Map, {\n      google: this.props.google,\n      zoom: 1,\n      style: mapStyles,\n      initialCenter: {\n        lat: 39.8283,\n        lng: -98.5795\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, this.displayMarkers(), this.state.isOpen && /*#__PURE__*/React.createElement(InfoWindow, {\n      onCloseClick: this.props.handleCloseCall,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 15\n      }\n    }, \"Something\")));\n  }\n\n}\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyCW_Vioa3QR3TUnN6MuFdprCqabI055FZk'\n})(MapContainer);","map":{"version":3,"sources":["/Users/sandyli/Desktop/CS97/project/Covid-tracker/covid-tracker/src/Maps/Map.js"],"names":["React","Component","useState","Map","GoogleApiWrapper","Marker","InfoWindow","countryLoc","mapStyles","width","height","MapContainer","constructor","props","handleToggleOpen","setState","isOpen","handleToggleClose","displayMarkers","state","map","location","index","lat","latitude","lng","longitude","render","google","handleCloseCall","apiKey"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAASC,GAAT,EAAcC,gBAAd,EAAgCC,MAAhC,EAAwCC,UAAxC,QAA0D,mBAA1D;AACA,OAAOC,UAAP,MAAuB,WAAvB,C,CACA;;AAEA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,KAAK,EAAE,KADS;AAEhBC,EAAAA,MAAM,EAAE;AAFQ,CAAlB;AAKA,OAAO,MAAMC,YAAN,SAA2BV,SAA3B,CAAqC;AAC1CW,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAKnBC,gBALmB,GAKA,MAAM;AACvB,WAAKC,QAAL,CAAc;AACZC,QAAAA,MAAM,EAAE;AADI,OAAd;AAGD,KATkB;;AAAA,SAWnBC,iBAXmB,GAWC,MAAM;AACxB,WAAKF,QAAL,CAAc;AACVC,QAAAA,MAAM,EAAE;AADE,OAAd;AAGD,KAfkB;;AAAA,SAiBnBE,cAjBmB,GAiBF,MAAM;AACrB,aAAO,KAAKC,KAAL,CAAWZ,UAAX,CAAsBa,GAAtB,CAA0B,CAACC,QAAD,EAAWC,KAAX,KAAqB;AACpD,4BAAO,oBAAC,MAAD;AACL,UAAA,GAAG,EAAEA,KADA;AAEL,UAAA,EAAE,EAAEA,KAFC;AAGL,UAAA,QAAQ,EAAE;AACRC,YAAAA,GAAG,EAAEF,QAAQ,CAACG,QADN;AAERC,YAAAA,GAAG,EAAEJ,QAAQ,CAACK;AAFN,WAHL,CAOT;AAPS;AAQR,UAAA,OAAO,EAAE,MAAM,KAAKZ,gBAAL,CAAsBQ,KAAtB,CARP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAUD,OAXM,CAAP;AAYD,KA9BkB;;AAEjB,SAAKH,KAAL,GAAa;AAAEZ,MAAAA,UAAF;AAAcS,MAAAA,MAAM,EAAE;AAAtB,KAAb;AACD;;AA6BDW,EAAAA,MAAM,GAAG;AACP,wBACI,oBAAC,GAAD;AACE,MAAA,MAAM,EAAE,KAAKd,KAAL,CAAWe,MADrB;AAEE,MAAA,IAAI,EAAE,CAFR;AAGE,MAAA,KAAK,EAAEpB,SAHT;AAIE,MAAA,aAAa,EAAE;AAAEe,QAAAA,GAAG,EAAE,OAAP;AAAgBE,QAAAA,GAAG,EAAE,CAAC;AAAtB,OAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMG,KAAKP,cAAL,EANH,EAcI,KAAKC,KAAL,CAAWH,MAAX,iBACA,oBAAC,UAAD;AAAY,MAAA,YAAY,EAAE,KAAKH,KAAL,CAAWgB,eAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,CAfJ,CADJ;AAsBD;;AAxDyC;AA2D5C,eAAezB,gBAAgB,CAAC;AAC9B0B,EAAAA,MAAM,EAAE;AADsB,CAAD,CAAhB,CAEZnB,YAFY,CAAf","sourcesContent":["import React, {Component, useState} from 'react';\nimport { Map, GoogleApiWrapper, Marker, InfoWindow } from 'google-maps-react';\nimport countryLoc from './Country'\n// import {fetchCountryData} from './api'\n\nconst mapStyles = {\n  width: '80%',\n  height: '70%',\n};\n\nexport class MapContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { countryLoc, isOpen: false }\n  }\n\n  handleToggleOpen = () => {\n    this.setState({\n      isOpen: true\n    });\n  }\n\n  handleToggleClose = () => {\n    this.setState({\n        isOpen: false\n    });\n  }\n\n  displayMarkers = () => {\n    return this.state.countryLoc.map((location, index) => {\n      return <Marker \n        key={index} \n        id={index} \n        position={{\n          lat: location.latitude,\n          lng: location.longitude\n     }}\n    //  onClick={() => console.log(\"You clicked me!\")} \n     onClick={() => this.handleToggleOpen(index)}\n    /> \n    })\n  }\n\n  render() {\n    return (\n        <Map\n          google={this.props.google}\n          zoom={1}\n          style={mapStyles}\n          initialCenter={{ lat: 39.8283, lng: -98.5795}}\n        >\n          {this.displayMarkers()}\n          {/* <Marker\n            lat={39.8283}\n            lng={-98.5795}\n            name=\"My Marker\"\n            color=\"red\"\n          /> */}\n          {\n            this.state.isOpen &&\n            <InfoWindow onCloseClick={this.props.handleCloseCall}>\n              <span>Something</span>\n            </InfoWindow>\n        }\n        </Map>\n    );\n  }\n}\n\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyCW_Vioa3QR3TUnN6MuFdprCqabI055FZk'\n})(MapContainer);"]},"metadata":{},"sourceType":"module"}